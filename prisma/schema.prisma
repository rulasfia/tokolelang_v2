// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql" // NOTE: sqlite does not work with NextAuth.js
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
    USER
    MASTER
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]

    role          Role @default(USER)
    Products      Product[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Product {
    id           String   @id @default(cuid())
    name         String
    description  String
    openingPrice Float
    closingDate  DateTime
    
    categoryID   String
    category     Category @relation(fields: [categoryID], references: [id], onDelete: Cascade)

    userId       String
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt
}

model Category {
    id           String   @id @default(cuid())
    name         String
    description  String

    products     Product[]

    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt
}
